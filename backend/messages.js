module.exports = {
    auth: {
        registerSuccess: "User registered successfully",
        loginSuccess: "Login successful",
        loginFailure: "Invalid email or password",
        tokenRequired: "Authentication required",
        tokenInvalid: "Invalid or expired token",
        accessDenied: "Access denied. Admin privileges required for this operation",
        missingCredentials: "Email and password are required",
        missingFields: "First name, email, and password are required",
        passwordResetSent: "If that email exists in our system, a password reset link has been sent.",
        passwordResetSuccess: "Password updated successfully",
        invalidResetRequest: "Invalid reset request",
        invalidToken: "Invalid or expired token",
        tokenExpired: "Token has expired",
        logout: "You have been logged out successfully.",
    },

    validation: {
        firstNameRequired: "First name is required",
        firstNameLength: "First name must be between 2 and 50 characters",
        firstNameFormat: "First name can only contain letters",
        emailRequired: "Email is required",
        emailInvalid: "Invalid email format",
        emailFormatInvalid: "Email format is invalid",
        passwordRequired: "Password is required",
        passwordLength: "Password must be at least 8 characters long",
        artistRequired: "Artist is required",
        artistTooLong: "Artist name too long",
        artistInvalidChars: "Artist name contains invalid characters",
        descriptionRequired: "Description is required",
        descriptionTooLong: "Description too long",
        descriptionInvalidChars: "Description contains invalid characters",
        lengthRange: "Length must be between 50 and 200",
        userIdRequired: "User ID is required",
        userIdEmpty: "User ID cannot be empty",
        userIdInvalid: "Invalid User ID format",
        resetTokenRequired: "Reset token is required",
    },

    api: {
        lyricsGenerationError: "Failed to generate lyrics",
        lyricsTimeout: "Request timed out",
        apiLimitReached: "You have reached your free tier limit of 20 API calls.",
        apiCountReset: "API call count reset successfully",
        userNotFound: "User not found",
        userDeleted: "User deleted successfully",
        databaseError: "Database query error",
        serverError: "Unexpected error",
    },

    admin: {
        noUsers: "No users found",
        noStatsAvailable: "No endpoint statistics available",
        loadingUsers: "Loading users...",
        loadingStats: "Loading statistics...",
    },

    success: {
        passwordReset: "Password reset successful!",
        redirectToDashboard: "Login successful! Redirecting to dashboard...",
        redirectToAdmin: "Login successful! Redirecting to admin dashboard...",
    },

    error: {
        loginFailed: "Login failed",
        registrationFailed: "Failed to register user",
        networkError: "Network error. Please try again.",
        invalidServerResponse: "Invalid server response",
        failedToResetPassword: "Failed to reset password",
        failedToFetchProfile: "Failed to fetch profile",
        failedToLoadUsers: "Failed to load users",
        failedToDeleteUser: "Failed to delete user",
        failedToResetApiCount: "Failed to reset API count",
        failedToFetchStats: "Failed to load endpoint statistics",
    },
};
